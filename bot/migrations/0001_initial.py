# Generated by Django 4.2.7 on 2023-11-25 11:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Address')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Chain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Chain',
                'verbose_name_plural': 'Chains',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('dosage', models.IntegerField(blank=True, null=True, verbose_name='Dosage')),
                ('units', models.CharField(blank=True, choices=[('ml', 'ml'), ('mg', 'mg')], max_length=10, null=True, verbose_name='Units')),
                ('quantity', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10000)], verbose_name='Quantity in pack')),
                ('form', models.CharField(blank=True, choices=[('pills', 'pills'), ('ampoules', 'ampoules')], null=True, verbose_name='Form')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Medication',
                'verbose_name_plural': 'Medications',
            },
        ),
        migrations.CreateModel(
            name='Pharmacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('rating', models.IntegerField(blank=True, choices=[(0, '-----'), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)], verbose_name='Rating')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pharmacy', to='bot.address', verbose_name='Address')),
                ('chain', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pharmacy', to='bot.chain', verbose_name='Chain')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pharmacy', to='bot.district', verbose_name='District')),
            ],
            options={
                'verbose_name': 'Pharmacy',
                'verbose_name_plural': 'Pharmacies',
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('number', models.CharField(max_length=15, unique=True, verbose_name='Number')),
            ],
            options={
                'verbose_name': 'Phone number',
                'verbose_name_plural': 'Phone numbers',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('id', models.BigIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=50, null=True, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Last name')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone number')),
                ('is_bot', models.BooleanField(default=False, verbose_name='Is bot')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='PharmacyStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stocks', to='bot.medication', verbose_name='Medication')),
                ('pharmacy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stocks', to='bot.pharmacy', verbose_name='Pharmacy')),
            ],
            options={
                'verbose_name': 'Pharmacy stock',
                'verbose_name_plural': 'Pharmacy stocks',
            },
        ),
        migrations.AddField(
            model_name='pharmacy',
            name='phone',
            field=models.ManyToManyField(to='bot.phone', verbose_name='Phone number'),
        ),
        migrations.AddIndex(
            model_name='medication',
            index=models.Index(fields=['name'], name='bot_medicat_name_54a8b8_idx'),
        ),
        migrations.AddIndex(
            model_name='medication',
            index=models.Index(fields=['name', 'dosage'], name='bot_medicat_name_068dec_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='medication',
            unique_together={('name', 'dosage')},
        ),
        migrations.AddConstraint(
            model_name='pharmacystock',
            constraint=models.UniqueConstraint(fields=('pharmacy', 'medication'), name='unique_pharmacy_medication'),
        ),
    ]
